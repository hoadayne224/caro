import tkinter as tk
from tkinter import ttk
from game import CaroGame
import os

HISTORY_FILE = "history.txt"

class MenuApp:
    def __init__(self, root):
        self.root = root
        self.root.title("C·ªù Caro - Menu")
        self.root.geometry("400x350")

        tk.Label(root, text="C·ªú CARO", font=("Arial", 20, "bold")).pack(pady=20)

        tk.Button(root, text="Ng∆∞·ªùi vs Ng∆∞·ªùi", width=20, height=2,
                  command=lambda: self.start_game("pvp")).pack(pady=10)

        tk.Button(root, text="Ng∆∞·ªùi vs M√°y (D·ªÖ)", width=20, height=2,
                  command=lambda: self.start_game("easy")).pack(pady=5)

        tk.Button(root, text="Ng∆∞·ªùi vs M√°y (Trung b√¨nh)", width=20, height=2,
                  command=lambda: self.start_game("medium")).pack(pady=5)

        tk.Button(root, text="Ng∆∞·ªùi vs M√°y (Kh√≥)", width=20, height=2,
                  command=lambda: self.start_game("hard")).pack(pady=5)

        # üëâ N√∫t xem l·ªãch s·ª≠
        tk.Button(root, text="L·ªãch s·ª≠ tr√≤ ch∆°i", width=20, height=2,
                  command=self.show_history).pack(pady=10)

        tk.Button(root, text="Tho√°t", width=20, height=2,
                  command=root.quit).pack(pady=10)

    def start_game(self, mode):
        self.root.destroy()
        game_root = tk.Tk()
        game_app = CaroGame(game_root, mode=mode)   # t·∫°o instance
        game_root.mainloop()

    def show_history(self):
        win = tk.Toplevel(self.root)
        win.title("L·ªãch s·ª≠ tr√≤ ch∆°i")
        win.geometry("600x400")

        cols = ("K·∫øt qu·∫£", "Ch·∫ø ƒë·ªô", "Th·ªùi gian (s)")
        tree = ttk.Treeview(win, columns=cols, show="headings")
        tree.pack(expand=True, fill=tk.BOTH)

        for col in cols:
            tree.heading(col, text=col)
            tree.column(col, anchor="center", width=180)

        if os.path.exists(HISTORY_FILE):
            with open(HISTORY_FILE, "r", encoding="utf-8") as f:
                lines = f.readlines()
            if not lines:
                tree.insert("", "end", values=("Ch∆∞a c√≥ l·ªãch s·ª≠", "-", "-"))
            else:
                for line in lines:
                    # V√≠ d·ª•: "K·∫øt qu·∫£: Ng∆∞·ªùi th·∫Øng | Ch·∫ø ƒë·ªô: easy | Th·ªùi gian: 35s"
                    parts = line.strip().split("|")
                    if len(parts) == 3:
                        result = parts[0].replace("K·∫øt qu·∫£:", "").strip()
                        mode   = parts[1].replace("Ch·∫ø ƒë·ªô:", "").strip()
                        time   = parts[2].replace("Th·ªùi gian:", "").strip()
                        tree.insert("", "end", values=(result, mode, time))
        else:
            tree.insert("", "end", values=("Ch∆∞a c√≥ l·ªãch s·ª≠", "-", "-"))

if __name__ == "__main__":
    root = tk.Tk()
    app = MenuApp(root)
    root.mainloop()
